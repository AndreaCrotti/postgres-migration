#+AUTHOR: Andrea Crotti
#+TITLE: From MySQL to Postgres
#+OPTIONS: num:nil ^:nil toc:nil timestamp:nil
#+REVEAL_TRANS: fade
#+REVEAL_SPEED: fast
#+EMAIL: andrea.crotti@iwoca.co.uk

* iwoca

Twitter: @andreacrotti

[[./images/iwoca_homepapge.png]]

* Why

[[./images/postgresql_versus_mysql.jpg]]

* Why, really

This sucks:

#+BEGIN_SRC sql
  SELECT X.* FROM no_chain_samplemodel as X
         JOIN (SELECT user_id, MAX(timestamp) AS timestamp
         FROM no_chain_samplemodel
         GROUP BY user_id) AS Y
         ON (X.user_id = Y.user_id and X.timestamp = Y.timestamp)
         WHERE X.staff_id = %s

#+END_SRC

This is great:

#+BEGIN_SRC sql

SELECT DISTINCT ON (user_id) FROM no_chain_samplemodel 
      WHERE timestamp <= '2017-01-01' ORDER BY user_id ASC, timestamp DESC;

#+END_SRC

* How

*From this*

#+BEGIN_SRC python
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        ...
     }
}
#+END_SRC

*To this*

#+BEGIN_SRC python
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        ...
     }
}
#+END_SRC

* Done?

[[./images/done_yet.png]]

* A few numbers

Massive fintech Django project:

- 190k lines of Python code
- > 100 Apps
- 383 tables to migrate
- 3000 tests running in ~3 minutes

* What's the plan

- adapt code
- migrate data
- profit!

* Data migration

Pgloader to the rescue:

[[./images/pgloader.png]]

*No streaming*

* Code changes

- get Postgres on CI (stable tests)
- search for untested raw queries
- manual testing on real data

** Example

[[./images/notebook.png]]

* One example

#+BEGIN_SRC python
  class Blog(models.Model):
      title = models.CharField(max_length=4)


  # the factory defined as

  class BlogFactory(factory.DjangoModelFactory):
      title = factory.Sequence(lambda n: "title_%d" % n)
#+END_SRC

* Tips for switchers

#+BEGIN_NOTES

#+END_NOTES

- *test* everything
- never rely on order
- split that monolith ASAP
